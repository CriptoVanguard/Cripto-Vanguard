
// Obtendo os elementos necess√°rios
const togglePassword = document.getElementById('togglePassword');
const passwordField = document.getElementById('password');

// Adicionando um evento de clique ao bot√£o de mostrar/ocultar senha
togglePassword.addEventListener('click', function () {
    // Verifica o tipo atual do campo de senha
    const type = passwordField.type === 'password' ? 'text' : 'password';
    passwordField.type = type;

    // Alterando o √≠cone do olho baseado na visibilidade da senha
    if (passwordField.type === 'password') {
        togglePassword.innerHTML = 'üëÅÔ∏è';  // √çcone de olho fechado
    } else {
        togglePassword.innerHTML = 'üôà';  // √çcone de olho aberto
    }
});

// Op√ß√£o para mostrar um alerta caso o formul√°rio de login seja enviado sem os campos preenchidos
const loginForm = document.getElementById('loginForm');
loginForm.addEventListener('submit', function (e) {
    e.preventDefault(); // Previne o envio do formul√°rio

    const username = document.getElementById('username').value;
    const password = passwordField.value;

    // Verifica se os campos est√£o preenchidos
    if (username === '' || password === '') {
        // Exibe um alerta de erro usando o SweetAlert2
        Swal.fire({
            icon: 'error',
            title: 'Erro!',
            text: 'Por favor, preencha todos os campos!',
        });
    } else {
        // Caso os campos estejam preenchidos, voc√™ pode enviar o formul√°rio ou realizar outra a√ß√£o
        // Exemplo: redirecionar para a p√°gina de dashboard
        Swal.fire({
            icon: 'success',
            title: 'Bem-vindo!',
            text: 'Voc√™ foi logado com sucesso.',
        }).then(() => {
            // Aqui voc√™ pode redirecionar o usu√°rio ap√≥s a autentica√ß√£o
            window.location.href = "dashboard.html"; // Substitua com a URL de destino
        });
    }
});
